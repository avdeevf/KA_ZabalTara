
&Вместо("ОбработкаПроведения")
Процедура КА_Заб_ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок, СтруктураШапкиДокумента;
	Перем ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоОборудованию, ТаблицаПоУслугам, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
	
	СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыльДо2015"       , мУчетнаяПолитика.ЕстьНалогНаПрибыльДо2015);
	СтруктураШапкиДокумента.Вставить("ЕстьНДС"                        , мУчетнаяПолитика.ЕстьНДС);
	
	// Проверим правильность заполнения шапки документа
	//ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	КА_Заб_ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоОборудованию, ТаблицаПоУслугам, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ, Заголовок);
	
	// Проверить заполнение ТЧ 
	//ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабличнойЧастиУслуги(ТаблицаПоУслугам, СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабличнойЧастиОборудование(ТаблицаПоОборудованию, СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабличнойЧастиВозвратнаяТара(ТаблицаПоТаре, СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабличнойЧастиОбъектыСтроительства(ТаблицаПоОбъектамСтроительства, СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабличнойЧастиБланкиСтрогогоУчета(ТаблицаПоБланкам, СтруктураШапкиДокумента, Отказ, Заголовок);

	//Проверим на возможность проведения в БУ и НУ
	УправлениеВзаиморасчетами.ПроверкаВозможностиПроведенияВ_БУ_НУ(СтруктураШапкиДокумента, СтруктураШапкиДокумента.ДоговорКонтрагента, Отказ, Заголовок);

	
	Если Не Отказ Тогда
		КА_Заб_ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, 
							ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоУслугам, ТаблицаПоОборудованию,
							ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ, Заголовок);
	КонецЕсли;
	
	Движения.Хозрасчетный.ВыполнитьДействияПередЗаписьюДвижений();
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);
КонецПроцедуры

//&Вместо("ПодготовитьТаблицыДокумента")
Процедура КА_Заб_ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоОборудованию, ТаблицаПоУслугам, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ, Заголовок)
	
	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "Товары".
	СтруктураПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Количество"  , "Количество * Коэффициент");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"   , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"         , "СуммаНДС");
	СтруктураПолей.Вставить("Услуга"      , "Номенклатура.Услуга");
	СтруктураПолей.Вставить("БланкСтрогогоУчета", "Номенклатура.БланкСтрогогоУчета");

	// Дополним полями, нужными для регл.
	СтруктураПолей.Вставить("СчетУчетаБУ"     , "СчетУчетаБУ");
	СтруктураПолей.Вставить("СчетУчетаБУЗабалансовый", "СчетУчетаБУ.Забалансовый");
	
	Если РозницаВПродажныхЦенах Тогда
		СтруктураПолей.Вставить("СуммаВРознице", "СуммаВРознице");
		СтруктураПолей.Вставить("СтавкаНДСВРознице" , "СтавкаНДСВРознице");
	КонецЕсли;

	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");
	
	СтруктураПолей.Вставить("СчетУчетаНДС"    	, "Ссылка.СчетУчетаНДС");

	РезультатЗапросаПоТоварам = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Товары", СтруктураПолей, ,СтруктураСложныхПолей);

	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "БланкиСтрогогоУчета".
	СтруктураПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Количество"  , "Количество * Коэффициент");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"   , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"         , "СуммаНДС");
	СтруктураПолей.Вставить("Услуга"      , "Номенклатура.Услуга");
	СтруктураПолей.Вставить("БланкСтрогогоУчета", "Номенклатура.БланкСтрогогоУчета");

	// Дополним полями, нужными для регл.
	СтруктураПолей.Вставить("СчетУчетаБУ"     , "СчетУчетаБУ");
	СтруктураПолей.Вставить("СчетУчетаЗабалансовыйБУ", "СчетУчетаЗабалансовыйБУ");
	
	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");
	
	СтруктураПолей.Вставить("СуммаНоминальная", "СуммаНоминальная");
	СтруктураПолей.Вставить("СчетУчетаНДС"    	, "Ссылка.СчетУчетаНДС");

	РезультатЗапросаПоБланкам = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "БланкиСтрогогоУчета", СтруктураПолей,,СтруктураСложныхПолей);
		
	
	// Получим необходимые данные для проведения и проверки заполенения данные 
	// по табличной части "Возвратная тара".
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Услуга"      , "Номенклатура.Услуга");
	СтруктураПолей.Вставить("БланкСтрогогоУчета", "Номенклатура.БланкСтрогогоУчета");
	СтруктураПолей.Вставить("Количество"  , "Количество");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");

	// Дополним полями
	СтруктураПолей.Вставить("СчетУчетаБУ", "СчетУчетаБУ");
	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");

	РезультатЗапросаПоТаре = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ВозвратнаяТара", СтруктураПолей);
	
	// Получим необходимые данные для проведения и проверки заполенения данные 
	// по табличной части "Возвратная тара (заб.)".
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Услуга"      , "Номенклатура.Услуга");
	СтруктураПолей.Вставить("БланкСтрогогоУчета", "Номенклатура.БланкСтрогогоУчета");
	СтруктураПолей.Вставить("Количество"  , "Количество");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");

	// Дополним полями
	СтруктураПолей.Вставить("СчетУчетаБУ", "СчетУчетаБУ");
	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");

	РезультатЗапросаПоТареЗаб = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ВозвратнаяТараЗаб", СтруктураПолей);


	// Получим необходимые данные для проведения и проверки заполенения данные 
	// по табличной части "Услуги".
	СтруктураПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Количество"  , "Количество");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"   , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"         , "СуммаНДС");
	СтруктураПолей.Вставить("Содержание"  , "Содержание");
	СтруктураПолей.Вставить("Услуга"      , "Номенклатура.Услуга");
	СтруктураПолей.Вставить("БланкСтрогогоУчета", "Номенклатура.БланкСтрогогоУчета");

	// Дополним полями
	СтруктураПолей.Вставить("СчетЗатрат",   	"СчетЗатрат" );
	СтруктураПолей.Вставить("Субконто1",    	"Субконто1");
	СтруктураПолей.Вставить("Субконто2",    	"Субконто2");
	СтруктураПолей.Вставить("Субконто3",    	"Субконто3");

	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");
	СтруктураПолей.Вставить("НалоговоеНазначениеДоходовИЗатрат", "НалоговоеНазначениеДоходовИЗатрат");
	
	СтруктураПолей.Вставить("СчетУчетаНДС"    	, "Ссылка.СчетУчетаНДС");

	РезультатЗапросаПоУслугам = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Услуги", СтруктураПолей,,СтруктураСложныхПолей);

	// Получим необходимые данные для проведения и проверки заполенения данные 
	// по табличной части "Оборудование".
	СтруктураПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
	СтруктураПолей.Вставить("Количество"  , "Количество * Коэффициент");
	СтруктураПолей.Вставить("Сумма"       , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"   , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"         , "СуммаНДС");

	// Дополним полями
	СтруктураПолей.Вставить("СчетУчетаБУ",  "СчетУчетаБУ");
	
	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");
	
	СтруктураПолей.Вставить("СчетУчетаНДС"    	, "Ссылка.СчетУчетаНДС");

	РезультатЗапросаПоОборудованию = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Оборудование", СтруктураПолей,,СтруктураСложныхПолей);

	// Получим необходимые данные для проведения и проверки заполенения данные 
	// по табличной части "ОбъектСтроительства".
	СтруктураПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	СтруктураПолей.Вставить("ОбъектСтроительства", "ОбъектСтроительства");
	СтруктураПолей.Вставить("СтатьяЗатрат"       , "СтатьяЗатрат");
	СтруктураПолей.Вставить("Сумма"              , "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"          , "СтавкаНДС");
	СтруктураПолей.Вставить("НДС"                , "СуммаНДС");

	СтруктураПолей.Вставить("СчетУчетаБУ",  "СчетУчетаБУ");
	
	СтруктураПолей.Вставить("НалоговоеНазначение"     	, "НалоговоеНазначение");
	СтруктураПолей.Вставить("ОбъектСтроительстваНалоговоеНазначение", "ОбъектСтроительства.НалоговоеНазначение");
	
	СтруктураПолей.Вставить("ВидДеятельностиНДС"     	, "НалоговоеНазначение.ВидДеятельностиНДС");
	
	СтруктураПолей.Вставить("СчетУчетаНДС"    	, "Ссылка.СчетУчетаНДС");

	РезультатЗапросаПоОбъектамСтроительства = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОбъектыСтроительства", СтруктураПолей,,СтруктураСложныхПолей);

	ПогрешностиОкругления     = Новый Соответствие;
	ПогрешностиОкругленияТара = Новый Соответствие;
	
	// Подготовим таблицы товаров для проведения.
	ТаблицаПоТоварам      = ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента, ПогрешностиОкругления);
	ТаблицаПоТаре         = ПодготовитьТаблицуТары(РезультатЗапросаПоТаре, СтруктураШапкиДокумента, ПогрешностиОкругленияТара);
	ТаблицаПоТареЗаб      = ПодготовитьТаблицуТары(РезультатЗапросаПоТареЗаб, СтруктураШапкиДокумента, ПогрешностиОкругленияТара);
	ТаблицаПоОборудованию = ПодготовитьТаблицуОборудование(РезультатЗапросаПоОборудованию, СтруктураШапкиДокумента, ПогрешностиОкругления);
	
	ТаблицаПоУслугам      = ПодготовитьТаблицуУслуг(РезультатЗапросаПоУслугам, СтруктураШапкиДокумента, ПогрешностиОкругления);
	
	ТаблицаПоОбъектамСтроительства = ПодготовитьТаблицуОбъектовСтроительства(РезультатЗапросаПоОбъектамСтроительства, СтруктураШапкиДокумента, ПогрешностиОкругления);
	ТаблицаПоБланкам 	  = ПодготовитьТаблицуБланков(РезультатЗапросаПоБланкам, СтруктураШапкиДокумента, ПогрешностиОкругления);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВозвратнуюТару") И ТаблицаПоТаре.Количество() > 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='В настройках параметров учета отключен параметр ""Ведется учет возвратной тары"". Движения по возвратной таре не будут сформированы!';uk='В настройках параметрів обліку вимкнений параметр ""Ведеться облік зворотної тари"". Рухи по зворотній тарі не будуть сформовані!'"
			),	
			ЭтотОбъект, 
			"ВозвратнаяТара", 
			"Объект"
		);
		
		ТаблицаПоТаре.Очистить();
		
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьБланкиСтрогогоУчета") И ТаблицаПоБланкам.Количество() > 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='В настройках параметров учета отключен параметр ""Ведется учет бланков строгого учета"". Движения по бланкам строгого учета не будут сформированы!';uk='В настройках параметрів обліку вимкнений параметр ""Ведеться облік бланків суворого обліку"". Рухи бланків суворого обліку не будуть сформовані!'"
			),	
			ЭтотОбъект, 
			"БланкиСтрогогоУчета", 
			"Объект"
		);
		
		ТаблицаПоБланкам.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

//&Вместо("ДвиженияПоРегистрам")
Процедура КА_Заб_ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоУслугам, ТаблицаПоОборудованию, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ, Заголовок)
	
	ВПереработку = (ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку);
	
	Комиссия = (ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия 
				И ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
				
	ТаблицаПоВторомуСобытиюНал = КА_Заб_ДвиженияПоРегистрамНалоговогоУчета(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоОборудованию, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ);
	
	// Проводки по взаиморасчетам - авансы
	Если НЕ ВПереработку И НЕ Комиссия Тогда

	   	ТаблицыДокумента = Новый Структура();
	   	ТаблицыДокумента.Вставить("ТаблицаПоТоварам",ТаблицаПоТоварам);
	   	ТаблицыДокумента.Вставить("ТаблицаПоУслугам",ТаблицаПоУслугам);
	   	ТаблицыДокумента.Вставить("ТаблицаПоОборудованию",ТаблицаПоОборудованию);
	   	ТаблицыДокумента.Вставить("ТаблицаПоОбъектамСтроительства",ТаблицаПоОбъектамСтроительства);
		ТаблицыДокумента.Вставить("ТаблицаПоБланкам",ТаблицаПоБланкам);

		//Возможны корректировки сумм при расчетах в валюте
		ТаблицаАвансов = БухгалтерскийУчетРасчетовСКонтрагентами.ЗачетАванса(ЭтотОбъект, СтруктураШапкиДокумента , мВалютаРегламентированногоУчета, ТаблицыДокумента , Отказ, Заголовок, "АВ");
		
	КонецЕсли; // Проводки по взаиморасчетам - авансы

	// Проводки по взаиморасчетам за тару - авансы
	Если НЕ ВПереработку Тогда
		
	   	ТаблицыДокумента = Новый Структура();
	   	ТаблицыДокумента.Вставить("ТаблицаПоТаре",ТаблицаПоТаре);
		ТаблицыДокумента.Вставить("ТаблицаПоТареЗаб",ТаблицаПоТареЗаб);
		
		//Возможны корректировки сумм при расчетах в валюте
		ТаблицаАвансовПоТаре = БухгалтерскийУчетРасчетовСКонтрагентами.ЗачетАванса(ЭтотОбъект, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета, ТаблицыДокумента , Отказ, Заголовок,"АВ",,,СтруктураШапкиДокумента.СчетУчетаРасчетовПоТаре, СтруктураШапкиДокумента.СчетУчетаРасчетовПоТареПоАвансам);

	КонецЕсли; // Проводки по взаиморасчетам за тару - авансы
	
		
	// Формирование проводок
	// Проводки по поступлению товаров, тары и услуг.

	ДатаДока   = СтруктураШапкиДокумента.Дата;
	ПроводкиБУ = Движения.Хозрасчетный;
	
	НТТ = (РозницаВПродажныхЦенах И (Склад.ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка));
	АТТ = (РозницаВПродажныхЦенах И (Склад.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин));
	
	Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия
	 или СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку
	 или СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование 
	 или СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства 
	 или СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.БланкиСтрогогоУчета Тогда

		// Проводки по товарам
		Для каждого СтрокаТаблицы Из ТаблицаПоТоварам Цикл

			Проводка = ПроводкиБУ.Добавить();

			Проводка.Период       = ДатаДока;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание   = НСтр("ru='Оприходованы ТМЦ';uk='Оприбутковані ТМЦ'",Локализация.КодЯзыкаИнформационнойБазы());

			Проводка.НалоговоеНазначениеДт = СтрокаТаблицы.НалоговоеНазначение;
			
			ОценкаСтоимостиВНУ = 0;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
				 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 ОценкаСтоимостиВНУ = Проводка.СуммаНУДт;
			 КонецЕсли;
			
			Проводка.СчетДт       = СтрокаТаблицы.СчетУчетаБУ;
			Если (НЕ НТТ) ИЛИ (мИспользоватьОборотнуюНоменклатуру) Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТаблицы.Номенклатура);
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",       СтруктураШапкиДокумента.Склад);
			
			Если НТТ И мРазделятьПоСтавкамНДС Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС",  СтрокаТаблицы.СтавкаНДСВРознице);
			КонецЕсли;
					
			// Для товаров, принятых на комиссию партия прописывается всегда 
			Если (ПартионныйУчетБУ) ИЛИ (БухгалтерскийУчетВызовСервераПовтИсп.КомиссионныйТовар(СтрокаТаблицы.СчетУчетаБУ)) Тогда 
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Партии", Ссылка);
			КонецЕсли;
			
			Если (НЕ НТТ) Тогда
				Проводка.КоличествоДт = СтрокаТаблицы.Количество;
			КонецЕсли;

			Проводка.Сумма = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

			// Проверка - вид Операции - комиссия
			Если Комиссия ИЛИ ВПереработку Тогда

				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);

				// кредит по НДС наступает с 2011 года в момент поставки товаров
				Если Комиссия Тогда
						
					Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

							Проводка = ПроводкиБУ.Добавить();

							Проводка.Период      = ДатаДока;

							Проводка.Организация = СтруктураШапкиДокумента.Организация;
							Проводка.Содержание  = НСтр("ru='НДС - налоговый кредит (товары)';uk='ПДВ - податковий кредит (товари)'", Локализация.КодЯзыкаИнформационнойБазы());

							Проводка.СчетДт      	= СтруктураШапкиДокумента.СчетУчетаНДС;
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));
							
							Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный;
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
							БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

							Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
								Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
								Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаНДСВал;
							КонецЕсли;

							Проводка.Сумма       = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
							
						КонецЕсли; // Проводки по НДС
				
				КонецЕсли;
				
			Иначе

				Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если Проводка.СчетКт.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
				КонецЕсли;
				
				// Проводки по НДС
				Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

					Проводка = ПроводкиБУ.Добавить();

					Проводка.Период      = ДатаДока;

					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Содержание  = НСтр("ru='НДС - налоговый кредит (товары)';uk='ПДВ - податковий кредит (товари)'",Локализация.КодЯзыкаИнформационнойБазы());

					Проводка.СчетДт      = СтрокаТаблицы.СчетУчетаНДС;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

					Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка, Сделка));

					Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
						Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаНДСВал;
					КонецЕсли;

					Проводка.Сумма       = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
					
 					НалоговыйУчет.РазбитьПроводкуПоНДСНаПервоеВтороеСобытие(ТаблицаПоВторомуСобытиюНал, ПроводкиБУ, Проводка, 
														 	  "Дт", СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный, 
															  СтруктураШапкиДокумента.ДоговорКонтрагента, 
															  НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка), Сделка,
															  Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление,
															  СтрокаТаблицы.СтавкаНДС, СтрокаТаблицы.ДляХозяйственнойДеятельности, СтрокаТаблицы.ВидДеятельностиНДС, ?(Дата < '20080101', Ложь, СтрокаТаблицы.Амортизируется),
															  СтрокаТаблицы.ПроводкиСуммаНДСВал);
					
				КонецЕсли; // Проводки по НДС
				
			КонецЕсли;
			
			Если РозницаВПродажныхЦенах Тогда
				Если АТТ Тогда
					ТорговаяНаценка = (СтрокаТаблицы.РозничнаяЦена * СтрокаТаблицы.Количество)   - СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;
					ТорговаяНаценкаНУ = (СтрокаТаблицы.РозничнаяЦена * СтрокаТаблицы.Количество) - ОценкаСтоимостиВНУ;
					СчетНаценки = ПланыСчетов.Хозрасчетный.ТорговаяНаценкаАТТ;
				Иначе
					ТорговаяНаценка   = СтрокаТаблицы.СуммаВРознице - СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;
					ТорговаяНаценкаНУ = СтрокаТаблицы.СуммаВРознице - ОценкаСтоимостиВНУ;
					СчетНаценки = ПланыСчетов.Хозрасчетный.ТорговаяНаценкаНТТ;
				КонецЕсли;
				
				Если    ТорговаяНаценка <> 0 Тогда
					
					Проводка = ПроводкиБУ.Добавить();
					Проводка.Период      = СтруктураШапкиДокумента.Дата;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Содержание  = НСтр("ru='Торговая наценка';uk='Торгова націнка'",Локализация.КодЯзыкаИнформационнойБазы());
					
					Проводка.НалоговоеНазначениеДт = СтрокаТаблицы.НалоговоеНазначение;
					Проводка.НалоговоеНазначениеКт = СтрокаТаблицы.НалоговоеНазначение;
					
					Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 Тогда
						 
						Проводка.СуммаНУДт = ТорговаяНаценкаНУ;
						Проводка.СуммаНУКт = ТорговаяНаценкаНУ;
						
					КонецЕсли;
					
					Проводка.СчетДт      = СтрокаТаблицы.СчетУчетаБУ;
					Проводка.СчетКт      = СчетНаценки;
					
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Склады",  СтруктураШапкиДокумента.Склад);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Склады",  СтруктураШапкиДокумента.Склад);
					
					Если (ПартионныйУчетБУ) Тогда
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Партии", Ссылка);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Партии", Ссылка);
					КонецЕсли;
					
					Если (НЕ НТТ) ИЛИ (мИспользоватьОборотнуюНоменклатуру) Тогда
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура",  СтрокаТаблицы.Номенклатура);
					КонецЕсли;
					Если НЕ НТТ Тогда
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура",  СтрокаТаблицы.Номенклатура);
					КонецЕсли;
					Если НТТ И мРазделятьПоСтавкамНДС Тогда
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС",  СтрокаТаблицы.СтавкаНДСВРознице);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтавкиНДС",  СтрокаТаблицы.СтавкаНДСВРознице);
					КонецЕсли;
										
					Проводка.Сумма       = ТорговаяНаценка;
				КонецЕсли;
							
			КонецЕсли;

		КонецЦикла; // Проводки по товарам
		
		// Проводки по бланкам стогого учета
		Для каждого СтрокаТаблицы Из ТаблицаПоБланкам Цикл

			Проводка = ПроводкиБУ.Добавить();

			Проводка.Период       = ДатаДока;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание   = НСтр("ru='Оприходованы БСУ';uk='Оприбутковані БСЗ'",Локализация.КодЯзыкаИнформационнойБазы());
			
			Проводка.НалоговоеНазначениеДт = СтрокаТаблицы.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
			 	 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 
			 КонецЕсли;

			
			Проводка.СчетДт       = СтрокаТаблицы.СчетУчетаБУ;
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",       СтруктураШапкиДокумента.Склад);
			
			// Для товаров, принятых на комиссию партия прописывается всегда 
			Если (ПартионныйУчетБУ) Тогда 
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Партии", Ссылка);
			КонецЕсли;
			
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
			Проводка.Сумма = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

			Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));
				
			// Проводки по НДС
			Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

				Проводка = ПроводкиБУ.Добавить();

				Проводка.Период      = ДатаДока;

				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Содержание  = НСтр("ru='НДС - налоговый кредит (БСУ)';uk='ПДВ - податковий кредит (БСЗ)'",Локализация.КодЯзыкаИнформационнойБазы());

				Проводка.СчетДт      = СтрокаТаблицы.СчетУчетаНДС;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

				Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка, Сделка));

				Проводка.Сумма       = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
				
				НалоговыйУчет.РазбитьПроводкуПоНДСНаПервоеВтороеСобытие(ТаблицаПоВторомуСобытиюНал, ПроводкиБУ, Проводка, 
														   "Дт", СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный, 
														  СтруктураШапкиДокумента.ДоговорКонтрагента, 
														  НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка), Сделка,
														  Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление,
														  СтрокаТаблицы.СтавкаНДС, СтрокаТаблицы.ДляХозяйственнойДеятельности, СтрокаТаблицы.ВидДеятельностиНДС, ?(Дата < '20080101', Ложь, СтрокаТаблицы.Амортизируется),
														  СтрокаТаблицы.ПроводкиСуммаНДСВал);
					
			КонецЕсли; // Проводки по НДС
			
			//проводка по  счету СчетУчетаЗабалансовыйБУ
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период       = ДатаДока;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание   = НСтр("ru='Оприходованы БСУ';uk='Оприбутковані БСЗ'",Локализация.КодЯзыкаИнформационнойБазы());

			Проводка.СчетДт       = СтрокаТаблицы.СчетУчетаЗабалансовыйБУ;
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",       СтруктураШапкиДокумента.Склад);
			
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
			Проводка.Сумма = СтрокаТаблицы.СуммаНоминальная;
										
		КонецЦикла; // Проводки по бланкам строгого учета
		
		// Проводки по таре
		Для Каждого СтрокаТаблицы Из ТаблицаПоТаре Цикл

			// Бухгалтерский учет
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период                  = ДатаДока;
			Проводка.Организация             = СтруктураШапкиДокумента.Организация;
			
			Проводка.Содержание              = НСтр("ru='Возвратная тара';uk='Зворотна тара'",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Сумма                   = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

			Проводка.НалоговоеНазначениеДт   = СтрокаТаблицы.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
				 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 
			 КонецЕсли;

			
			Проводка.СчетДт                  = СтрокаТаблицы.СчетУчетаБУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",       СтруктураШапкиДокумента.Склад);
			
			// Для товаров, принятых на комиссию партия прописывается всегда 
			Если (ПартионныйУчетБУ) ИЛИ (БухгалтерскийУчетВызовСервераПовтИсп.КомиссионныйТовар(СтрокаТаблицы.СчетУчетаБУ)) Тогда 
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Партии", Ссылка);
			КонецЕсли;

			Проводка.КоличествоДт            = СтрокаТаблицы.Количество;

			// Проверка - вид Операции - комиссия
			Если СтрокаТаблицы.СчетУчетаБУ.Забалансовый Тогда

				Если НЕ (СтрокаТаблицы.СчетУчетаБУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты ,"ВидСубконто") = Неопределено) Тогда
					Проводка.СубконтоДт.Контрагенты = СтруктураШапкиДокумента.Контрагент;
				КонецЕсли;

			Иначе

				Проводка.СчетКт                  = СтруктураШапкиДокумента.СчетУчетаРасчетовПоТаре;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если СтруктураШапкиДокумента.СчетУчетаРасчетовПоТаре.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаДокумента;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
				КонецЕсли;

			КонецЕсли;

		КонецЦикла; // Проводки по таре
		
		// Проводки по таре (заб.)
		Для Каждого СтрокаТаблицы Из ТаблицаПоТареЗаб Цикл

			// Бухгалтерский учет
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период                  = ДатаДока;
			Проводка.Организация             = СтруктураШапкиДокумента.Организация;
			
			Проводка.Содержание              = НСтр("ru='Возвратная тара (заб.)';uk='Зворотна тара (заб.)'",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Сумма                   = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

			Проводка.НалоговоеНазначениеДт   = СтрокаТаблицы.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
				 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 
			КонецЕсли;

			
			Проводка.СчетДт                  = СтрокаТаблицы.СчетУчетаБУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",       СтруктураШапкиДокумента.Склад);
			//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",     СтруктураШапкиДокумента.ДоговорКонтрагента);
			
			// Для товаров, принятых на комиссию партия прописывается всегда 
			Если (ПартионныйУчетБУ) ИЛИ (БухгалтерскийУчетВызовСервераПовтИсп.КомиссионныйТовар(СтрокаТаблицы.СчетУчетаБУ)) Тогда 
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Партии", Ссылка);
			КонецЕсли;

			Проводка.КоличествоДт            = СтрокаТаблицы.Количество;

			// Проверка - вид Операции - комиссия
			Если СтрокаТаблицы.СчетУчетаБУ.Забалансовый Тогда

				Если НЕ (СтрокаТаблицы.СчетУчетаБУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты ,"ВидСубконто") = Неопределено) Тогда
					Проводка.СубконтоДт.Контрагенты = СтруктураШапкиДокумента.Контрагент;
				КонецЕсли;

			Иначе

				Проводка.СчетКт                  = СтруктураШапкиДокумента.СчетУчетаРасчетовПоТаре;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если СтруктураШапкиДокумента.СчетУчетаРасчетовПоТаре.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаДокумента;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
				КонецЕсли;

			КонецЕсли;

		КонецЦикла; // Проводки по таре
		
		// Проводки по услугам - только при покупке.
		Если НЕ СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			
			Для каждого СтрокаТаблицы Из ТаблицаПоУслугам Цикл

				Проводка = ПроводкиБУ.Добавить();

				Проводка.Период       = Дата;
				Проводка.Организация  = СтруктураШапкиДокумента.Организация;
				Проводка.Содержание   = НСтр("ru='Услуги';uk='Послуги'",Локализация.КодЯзыкаИнформационнойБазы());
				Проводка.Сумма        = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

				Проводка.НалоговоеНазначениеДт       = СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат;
				Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
					СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
					СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат  <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_НеХозДеятельность
					И СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат  <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность
					Тогда
					
					Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
					
				КонецЕсли;
				
				
				Проводка.СчетДт       = СтрокаТаблицы.СчетЗатрат;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТаблицы.Субконто1);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.Субконто2);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СтрокаТаблицы.Субконто3);

				Проводка.СчетКт       = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами",УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
				КонецЕсли;

				// Проводка по НДС
				Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

					Проводка = ПроводкиБУ.Добавить();

					Проводка.Период       = Дата;
					Проводка.Организация  = СтруктураШапкиДокумента.Организация;
					Проводка.Сумма        = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
					Проводка.Содержание   = НСтр("ru='НДС - налоговый кредит (услуги)';uk='ПДВ - податковий кредит (послуги)'",Локализация.КодЯзыкаИнформационнойБазы());

					Проводка.СчетДт       = СтрокаТаблицы.СчетУчетаНДС;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

					Проводка.СчетКт       = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",СтруктураШапкиДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами",УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));
					Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
						Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаНДСВал;
					КонецЕсли;
					
					НалоговыйУчет.РазбитьПроводкуПоНДСНаПервоеВтороеСобытие(ТаблицаПоВторомуСобытиюНал, ПроводкиБУ, Проводка, 
														 	  "Дт", СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный, 
															  СтруктураШапкиДокумента.ДоговорКонтрагента, 
															  НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка), Сделка,
															  Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление,
															  СтрокаТаблицы.СтавкаНДС, СтрокаТаблицы.ДляХозяйственнойДеятельности, СтрокаТаблицы.ВидДеятельностиНДС, ?(Дата < '20080101', Ложь, СтрокаТаблицы.Амортизируется),
															  СтрокаТаблицы.ПроводкиСуммаНДСВал);

				КонецЕсли; // Проводка по НДС
				
			КонецЦикла;
			
		КонецЕсли; // Проводки по услугам

		// Проводки по поступлению ОС
		Для каждого СтрокаТаблицы Из ТаблицаПоОборудованию Цикл

			Проводка = ПроводкиБУ.Добавить();

			Проводка.Период                  = Дата;
			Проводка.Организация             = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание              = "	";
			Проводка.НомерЖурнала            = НСтр("ru='ОС';uk='ОЗ'",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Сумма                   = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;

			Проводка.НалоговоеНазначениеДт  = СтрокаТаблицы.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
				 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 
			 КонецЕсли;
			
			Проводка.СчетДт                  = СтрокаТаблицы.СчетУчетаБУ;
			Проводка.КоличествоДт            = СтрокаТаблицы.Количество;

			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура",СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Склады",СтруктураШапкиДокумента.Склад);
			Если ПартионныйУчетБУ Тогда 
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Партии",СтруктураШапкиДокумента.Ссылка);
			КонецЕсли;

			Проводка.СчетКт                  = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",СтруктураШапкиДокумента.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами",УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

			Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
				Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
			КонецЕсли;

			// Проводка по НДС
			Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

				Проводка = ПроводкиБУ.Добавить();

				Проводка.Период       = Дата;
				Проводка.Организация  = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма        = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
				Проводка.Содержание   = НСтр("ru='НДС - налоговый кредит (ОС)';uk='ПДВ - податковий кредит (ОЗ)'",Локализация.КодЯзыкаИнформационнойБазы());
				Проводка.НомерЖурнала = НСтр("ru='ОС';uk='ОЗ'",Локализация.КодЯзыкаИнформационнойБазы());

				Проводка.СчетДт       = СтрокаТаблицы.СчетУчетаНДС;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

				Проводка.СчетКт       = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами",УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаНДСВал;
				КонецЕсли;
				
				НалоговыйУчет.РазбитьПроводкуПоНДСНаПервоеВтороеСобытие(ТаблицаПоВторомуСобытиюНал, ПроводкиБУ, Проводка, 
														 	  "Дт", СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный, 
															  СтруктураШапкиДокумента.ДоговорКонтрагента, 
															  НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка), Сделка,
															  Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление,
															  СтрокаТаблицы.СтавкаНДС, СтрокаТаблицы.ДляХозяйственнойДеятельности, СтрокаТаблицы.ВидДеятельностиНДС, ?(Дата < '20080101', Ложь, СтрокаТаблицы.Амортизируется),
															  СтрокаТаблицы.ПроводкиСуммаНДСВал);

			КонецЕсли; // Проводка по НДС
						
		КонецЦикла; // Проводки по поступлению ОС
		
		// Проводки по поступлению объектов стоительства
		Для каждого СтрокаТаблицы Из ТаблицаПоОбъектамСтроительства Цикл

			Проводка = ПроводкиБУ.Добавить();

			Проводка.Период                  = Дата;
			Проводка.Организация             = СтруктураШапкиДокумента.Организация;
			Проводка.НомерЖурнала           = НСтр("ru='ОС';uk='ОЗ'",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Содержание              = НСтр("ru='Затраты на приобретение объектов строительства';uk=""Витрати на придбання об'єктів будівництва""",Локализация.КодЯзыкаИнформационнойБазы());

			
			Проводка.НалоговоеНазначениеДт   = СтрокаТаблицы.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И
				 СтруктураШапкиДокумента.НеОтноситьНаЗатратыПоНУ = Ложь И 
				 СтрокаТаблицы.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				 
				 Проводка.СуммаНУДт = НалоговыйУчет.УчестьСуммуАвансаДо01042011(СтруктураШапкиДокумента, СтрокаТаблицы.ПроводкиСуммаБезНДСРегл);
				 
			КонецЕсли;
			
			Проводка.СчетДт                  = СтрокаТаблицы.СчетУчетаБУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОбъектыСтроительства", СтрокаТаблицы.ОбъектСтроительства);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиЗатрат",         СтрокаТаблицы.СтатьяЗатрат);

			Проводка.СчетКт                  = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

			Проводка.Сумма = СтрокаТаблицы.ПроводкиСуммаБезНДСРегл;
			Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
				Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаБезНДСВал;
			КонецЕсли;

			// Проводки по НДС
			Если СтруктураШапкиДокумента.ЕстьНДС И СтрокаТаблицы.ПроводкиСуммаНДСРегл > 0 Тогда

				Проводка = ПроводкиБУ.Добавить();

				Проводка.Период      = Дата;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма       = СтрокаТаблицы.ПроводкиСуммаНДСРегл;
				Проводка.Содержание  = НСтр("ru='НДС - налоговый кредит (объекты строительства)';uk=""ПДВ - податковий кредит (об'єкти будівництва)""",Локализация.КодЯзыкаИнформационнойБазы());

				Проводка.СчетДт      = СтрокаТаблицы.СчетУчетаНДС;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка));

				Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",СтруктураШапкиДокумента.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",СтруктураШапкиДокумента.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами",УправлениеВзаиморасчетами.ОпределитьДокументРасчетовСКонтрагентом(Ссылка,Сделка));

				Если СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
					Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
					Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.ПроводкиСуммаНДСВал;
				КонецЕсли;

				НалоговыйУчет.РазбитьПроводкуПоНДСНаПервоеВтороеСобытие(ТаблицаПоВторомуСобытиюНал, ПроводкиБУ, Проводка, 
														   "Дт", СтруктураШапкиДокумента.СчетУчетаНДСПодтвержденный, 
														  СтруктураШапкиДокумента.ДоговорКонтрагента, 
														  НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента, Ссылка, Сделка), Сделка,
														  Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление,
														  СтрокаТаблицы.СтавкаНДС, СтрокаТаблицы.ДляХозяйственнойДеятельности, СтрокаТаблицы.ВидДеятельностиНДС, ?(Дата < '20080101', Ложь, СтрокаТаблицы.Амортизируется),
														  СтрокаТаблицы.ПроводкиСуммаНДСВал);
				
			КонецЕсли; // Проводка по НДС  
						
		КонецЦикла; // Проводки по поступлению объектов стоительства
	КонецЕсли;
	
	//Учет курсовых разниц
	Если (ВалютаДокумента <> мВалютаРегламентированногоУчета) тогда
		БухгалтерскийУчетРед12.ПереоценкаСчетовДокументаРегл(ЭтотОбъект,СтруктураШапкиДокумента, мВалютаРегламентированногоУчета,Отказ,Заголовок);
	КонецЕсли; // Учет курсовых разниц
	
КонецПроцедуры

//&Вместо("ДвиженияПоРегистрамНалоговогоУчета")
Функция КА_Заб_ДвиженияПоРегистрамНалоговогоУчета(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоТаре, ТаблицаПоТареЗаб, ТаблицаПоОборудованию, ТаблицаПоОбъектамСтроительства, ТаблицаПоБланкам, Отказ)
	
	ТаблицаПоВторомуСобытиюНал = НалоговыйУчет.СоздатьСтруктуруТаблицыНалоговыхСумм();

	Если Не СтруктураШапкиДокумента.ЕстьНДС Тогда
		// Если не нужно отражать в налоговом учете, тогда не отражаем и в подсистеме учета НДС
		Возврат ТаблицаПоВторомуСобытиюНал;                    
	КонецЕсли;

	//Отразим Продажи в регистре ПродажиНалоговыйУчет
	НаборДвижений = Движения.ПриобретенияНалоговыйУчет;
	
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.ВыгрузитьКолонки();
	ТаблицаДвиженийТара = ТаблицаДвижений.Скопировать();
	ТаблицаДвиженийТараЗаб = ТаблицаДвижений.Скопировать();
	
	Если  СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку
	  ИЛИ СтруктураШапкиДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		// в налоговом учете не учитываются
	Иначе
		
		// ТОВАРЫ
		ТаблицаКопия = ТаблицаПоТоварам.Скопировать();
		ТаблицаКопия.Свернуть("СтавкаНДС,  ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал, СуммаНДСВалИсходный");
		ТаблицаПриобретений = ТаблицаКопия.Скопировать();
		
		// ОБОРУДОВАНИЕ
		ТаблицаКопия = ТаблицаПоОборудованию.Скопировать();
		ТаблицаКопия.Свернуть("СтавкаНДС,  ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал, СуммаНДСВалИсходный");
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
		
		// ОБЪЕКТЫ СТРОИТЕЛЬСТВА
		ТаблицаКопия = ТаблицаПоОбъектамСтроительства.Скопировать();
		ТаблицаКопия.Свернуть("СтавкаНДС,  ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал, СуммаНДСВалИсходный");
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
		
		// УСЛУГИ
		ТаблицаКопия = ТаблицаПоУслугам.Скопировать();                                                            
		ТаблицаКопия.Свернуть("СтавкаНДС,  ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал, СуммаНДСВалИсходный");
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
		
		ТаблицаКопия = ТаблицаПоБланкам.Скопировать();
		ТаблицаКопия.Свернуть("СтавкаНДС,  ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал, СуммаНДСВалИсходный");
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
		
		
		ТаблицаПриобретений.Колонки.Добавить("СуммаНДСПропорционально");
		Для каждого СтрокаКопии Из ТаблицаПриобретений Цикл
			Если СтрокаКопии.ВидДеятельностиНДС = Перечисления.ВидыДеятельностиНДС.ПропорциональноОблагаемая Тогда
				СтрокаКопии.СуммаНДСПропорционально = СтрокаКопии.СуммаНДСВал;
				СтрокаКопии.СуммаНДСВал = СтрокаКопии.СуммаНДСВалИсходный;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаПриобретений.Колонки.СуммаСНДСВал.Имя = "СуммаВзаиморасчетов";
		ТаблицаПриобретений.Колонки.СуммаНДСВал.Имя  = "СуммаНДС";
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПриобретений, ТаблицаДвижений);
		
	КонецЕсли;		
	
	ТаблицаДвижений.ЗаполнитьЗначения(Организация       , "Организация");
	ТаблицаДвижений.ЗаполнитьЗначения(ДоговорКонтрагента, "ДоговорКонтрагента");
	ТаблицаДвижений.ЗаполнитьЗначения(НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента,
																	СтруктураШапкиДокумента.Ссылка, 
																	СтруктураШапкиДокумента.Сделка),
									  "Сделка");
	ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.СобытияПриобретенияНалоговыйУчет.ПоступлениеОтПоставщика, "Событие");
	
	Если СтруктураШапкиДокумента.СложныйНалоговыйУчет Тогда
		
		// очистим налоговые реквизиты
		ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.СтавкиНДС.ПустаяСсылка(), 			"СтавкаНДС");
		ТаблицаДвижений.ЗаполнитьЗначения(Ложь, 										   	"ДляХозяйственнойДеятельности");
		ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.ВидыДеятельностиНДС.ПустаяСсылка(), 	"ВидДеятельностиНДС");
		ТаблицаДвижений.ЗаполнитьЗначения(Ложь,												"Амортизируется");
		ТаблицаДвижений.ЗаполнитьЗначения(0, 												"СуммаНДС");
		ТаблицаДвижений.ЗаполнитьЗначения(0, 												"СуммаНДСПропорционально");
		
	Иначе		
		
		Если СтруктураШапкиДокумента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоРасчетнымДокументам Тогда
			// взаиморасчеты по договору по расчетным документам - необходимо заполнить в регистре реквизит РасчетныйДокумент
			ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.Сделка, "РасчетныйДокумент");
		КонецЕсли;			
		
	КонецЕсли;
	
	//ТАРА
	ТаблицаКопия = ТаблицаПоТаре.Скопировать();
	ТаблицаКопия.Свернуть("СтавкаНДС, ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал");
	ТаблицаКопия.Колонки.СуммаСНДСВал.Имя = "СуммаВзаиморасчетов";
	ТаблицаКопия.Колонки.СуммаНДСВал.Имя = "СуммаНДС";
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаДвиженийТара);
	ТаблицаДвиженийТара.ЗаполнитьЗначения(Организация       , "Организация");
	ТаблицаДвиженийТара.ЗаполнитьЗначения(ДоговорКонтрагента, "ДоговорКонтрагента");
	ТаблицаДвиженийТара.ЗаполнитьЗначения(НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента,
																	СтруктураШапкиДокумента.Ссылка, 
																	СтруктураШапкиДокумента.Сделка),
									  "Сделка");
	ТаблицаДвиженийТара.ЗаполнитьЗначения(Перечисления.СобытияПриобретенияНалоговыйУчет.ПоступлениеОтПоставщика, "Событие");
	ТаблицаДвиженийТара.ЗаполнитьЗначения(Истина, "ВозвратнаяТара");
	
	Если СтруктураШапкиДокумента.СложныйНалоговыйУчет Тогда
		
		// очистим налоговые реквизиты
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Перечисления.СтавкиНДС.ПустаяСсылка(), 			"СтавкаНДС");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Ложь, 										   		"ДляХозяйственнойДеятельности");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Перечисления.ВидыДеятельностиНДС.ПустаяСсылка(), 		"ВидДеятельностиНДС");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Ложь,													"Амортизируется");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(0, 												"СуммаНДС");
		
	Иначе		
		
		Если СтруктураШапкиДокумента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоРасчетнымДокументам Тогда
			// взаиморасчеты по договору по расчетным документам - необходимо заполнить в регистре реквизит РасчетныйДокумент
			ТаблицаДвиженийТара.ЗаполнитьЗначения(Сделка, "РасчетныйДокумент");
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ И ТаблицаДвижений.Количество() > 0 Тогда
			
		НаборДвижений.мПериод          = Дата;
		НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
			
		Движения.ПриобретенияНалоговыйУчет.ВыполнитьПриход();
		Движения.ПриобретенияНалоговыйУчет.Записать();
			
	КонецЕсли;
	
	Если НЕ Отказ И ТаблицаДвиженийТара.Количество() > 0 Тогда
			
		НаборДвижений.мПериод          = Дата;
		НаборДвижений.мТаблицаДвижений = ТаблицаДвиженийТара;
			
		Движения.ПриобретенияНалоговыйУчет.ВыполнитьПриход();
		Движения.ПриобретенияНалоговыйУчет.Записать();
			
	КонецЕсли;
	
	//ТАРА (ЗАБ.)
	ТаблицаКопия = ТаблицаПоТареЗаб.Скопировать();
	ТаблицаКопия.Свернуть("СтавкаНДС, ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаСНДСВал, СуммаНДСВал");
	ТаблицаКопия.Колонки.СуммаСНДСВал.Имя = "СуммаВзаиморасчетов";
	ТаблицаКопия.Колонки.СуммаНДСВал.Имя = "СуммаНДС";
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаДвиженийТараЗаб);
	ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Организация       , "Организация");
	ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(ДоговорКонтрагента, "ДоговорКонтрагента");
	ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента,
																	СтруктураШапкиДокумента.Ссылка, 
																	СтруктураШапкиДокумента.Сделка),
									  "Сделка");
	ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Перечисления.СобытияПриобретенияНалоговыйУчет.ПоступлениеОтПоставщика, "Событие");
	ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Истина, "ВозвратнаяТараЗаб");
	
	Если СтруктураШапкиДокумента.СложныйНалоговыйУчет Тогда
		
		// очистим налоговые реквизиты
		ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Перечисления.СтавкиНДС.ПустаяСсылка(), 			"СтавкаНДС");
		ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Ложь, 										   		"ДляХозяйственнойДеятельности");
		ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Перечисления.ВидыДеятельностиНДС.ПустаяСсылка(), 		"ВидДеятельностиНДС");
		ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Ложь,													"Амортизируется");
		ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(0, 												"СуммаНДС");
		
	Иначе		
		
		Если СтруктураШапкиДокумента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоРасчетнымДокументам Тогда
			// взаиморасчеты по договору по расчетным документам - необходимо заполнить в регистре реквизит РасчетныйДокумент
			ТаблицаДвиженийТараЗаб.ЗаполнитьЗначения(Сделка, "РасчетныйДокумент");
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ И ТаблицаДвижений.Количество() > 0 Тогда
			
		НаборДвижений.мПериод          = Дата;
		НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
			
		Движения.ПриобретенияНалоговыйУчет.ВыполнитьПриход();
		Движения.ПриобретенияНалоговыйУчет.Записать();
			
	КонецЕсли;
	
	Если НЕ Отказ И ТаблицаДвиженийТараЗаб.Количество() > 0 Тогда
			
		НаборДвижений.мПериод          = Дата;
		НаборДвижений.мТаблицаДвижений = ТаблицаДвиженийТараЗаб;
			
		Движения.ПриобретенияНалоговыйУчет.ВыполнитьПриход();
		Движения.ПриобретенияНалоговыйУчет.Записать();
			
	КонецЕсли;

	// Движения по регистру Ожидаемый и подтвержденный НДС приобретений
	Если НЕ СтруктураШапкиДокумента.СложныйНалоговыйУчет Тогда
		// Движения формируются по данным рассчета "первого события" 
	   НалоговыйУчет.ДвиженияПоРегистрамНалоговогоУчетаУпрощенныйНалоговыйУчет(ЭтотОбъект, ТаблицаПоВторомуСобытиюНал);
	
	ИначеЕсли СтруктураШапкиДокумента.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета Тогда

		НаборДвижений = Движения.ОжидаемыйИПодтвержденныйНДСПриобретений;
		
		// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
		ТаблицаДвижений = НаборДвижений.ВыгрузитьКолонки();
		
		ТаблицаДвиженийТара = ТаблицаДвижений.Скопировать();
		
		Если  СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			// в налоговом учете не учитываются
		Иначе
			// ТОВАРЫ
			ТаблицаКопия = ТаблицаПоТоварам.Скопировать();
			ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаБезНДСВал,СуммаНДСВал, СуммаНДСВалИсходный");
			ТаблицаПриобретений = ТаблицаКопия.Скопировать();
			
			// ОБОРУДОВАНИЕ
			ТаблицаКопия = ТаблицаПоОборудованию.Скопировать();
			ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаБезНДСВал,СуммаНДСВал, СуммаНДСВалИсходный");
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
			
			// ОБЪЕКТЫ СТРОИТЕЛЬСТВА
			ТаблицаКопия = ТаблицаПоОбъектамСтроительства.Скопировать();
			ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаБезНДСВал,СуммаНДСВал, СуммаНДСВалИсходный");
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
			
			// УСЛУГИ
			ТаблицаКопия = ТаблицаПоУслугам.Скопировать();
			ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаБезНДСВал,СуммаНДСВал,СуммаНДСВалИсходный");
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
			
			ТаблицаКопия = ТаблицаПоБланкам.Скопировать();
			ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС, Амортизируется","СуммаБезНДСВал,СуммаНДСВал");
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаПриобретений);
			
			ТаблицаПриобретений.Колонки.Добавить("СуммаНДСПропорционально");
			Для каждого СтрокаКопии Из ТаблицаПриобретений Цикл
				Если СтрокаКопии.ВидДеятельностиНДС = Перечисления.ВидыДеятельностиНДС.ПропорциональноОблагаемая Тогда
					СуммаСНДСВал = СтрокаКопии.СуммаБезНДСВал  + СтрокаКопии.СуммаНДСВал;
					СтрокаКопии.СуммаНДСПропорционально = СтрокаКопии.СуммаНДСВал;
					СтрокаКопии.СуммаНДСВал 			= СтрокаКопии.СуммаНДСВалИсходный;
					СтрокаКопии.СуммаБезНДСВал 			= СуммаСНДСВал - СтрокаКопии.СуммаНДСВал;
				КонецЕсли;
			КонецЦикла;
			
			
			ТаблицаПриобретений.Колонки.СуммаБезНДСВал.Имя = "БазаНДС";
			ТаблицаПриобретений.Колонки.СуммаНДСВал   .Имя = "СуммаНДС";
			ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПриобретений, ТаблицаДвижений);
			ТаблицаДвижений.ЗаполнитьЗначения(Организация       , "Организация");
			ТаблицаДвижений.ЗаполнитьЗначения(ДоговорКонтрагента, "ДоговорКонтрагента");
			ТаблицаДвижений.ЗаполнитьЗначения(НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента,
																			СтруктураШапкиДокумента.Ссылка, 
																			СтруктураШапкиДокумента.Сделка),
											  	"Сделка");
			ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление, 			"СобытиеНДС");
			ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.КодыОперацийОжидаемыйИПодтвержденныйНДСПриобретений.ОжидаемыйНДС , 	"КодОперации");

		КонецЕсли;

		// ТАРА
		ТаблицаКопия = ТаблицаПоТаре.Скопировать();
		ТаблицаКопия.Свернуть("СтавкаНДС,ДляХозяйственнойДеятельности,ВидДеятельностиНДС","СуммаБезНДСВал,СуммаНДСВал");
		ТаблицаКопия.Колонки.СуммаБезНДСВал.Имя = "БазаНДС";
		ТаблицаКопия.Колонки.СуммаНДСВал.Имя 	= "СуммаНДС";
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаКопия, ТаблицаДвиженийТара);
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Организация       , "Организация");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(ДоговорКонтрагента, "ДоговорКонтрагента");
		ТаблицаДвижений.ЗаполнитьЗначения(НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(СтруктураШапкиДокумента,
																		СтруктураШапкиДокумента.Ссылка, 
																		СтруктураШапкиДокумента.Сделка),
											  "Сделка");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Истина            , "ВозвратнаяТара");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление, 			"СобытиеНДС");
		ТаблицаДвиженийТара.ЗаполнитьЗначения(Перечисления.КодыОперацийОжидаемыйИПодтвержденныйНДСПриобретений.ОжидаемыйНДС   , "КодОперации");
			
		Если НЕ Отказ И ТаблицаДвижений.Количество() > 0 Тогда
			
			НаборДвижений.мПериод          = Дата;
			НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
		
			Движения.ОжидаемыйИПодтвержденныйНДСПриобретений.ВыполнитьПриход();
			Движения.ОжидаемыйИПодтвержденныйНДСПриобретений.Записать();
			
		КонецЕсли;
		
		Если НЕ Отказ И ТаблицаДвиженийТара.Количество() > 0 Тогда
			
			НаборДвижений.мПериод          = Дата;
			НаборДвижений.мТаблицаДвижений = ТаблицаДвиженийТара;
		
			Движения.ОжидаемыйИПодтвержденныйНДСПриобретений.ВыполнитьПриход();
			Движения.ОжидаемыйИПодтвержденныйНДСПриобретений.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаПоВторомуСобытиюНал;
	
КонецФункции
